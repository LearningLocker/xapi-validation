const requireTest = rule => (data, path) =>
  require(rule)(data, path);

module.exports = {
  account: requireTest('./SchemaRules/Account'),
  activity: requireTest('./SchemaRules/Activity'),
  actor: requireTest('./SchemaRules/Actor'),
  agent: requireTest('./SchemaRules/Agent'),
  attachment: requireTest('./SchemaRules/Attachment'),
  authority: requireTest('./SchemaRules/Authority'),
  boolean: requireTest('./Values/Boolean'),
  context: requireTest('./SchemaRules/Context'),
  contextActivities: requireTest('./SchemaRules/ContextActivities'),
  definition: requireTest('./SchemaRules/Definition'),
  duration: requireTest('./RegexValues/Duration'),
  extensions: requireTest('./Maps/extensions'),
  float: requireTest('./Values/Float'),
  group: requireTest('./SchemaRules/Group'),
  imt: requireTest('./RegexValues/Imt'),
  integer: requireTest('./Values/Integer'),
  interactionComponent: requireTest('./SchemaRules/InteractionComponent'),
  interactionType: requireTest('./RegexValues/InteractionType'),
  iri: requireTest('./RegexValues/Iri'),
  language: requireTest('./RegexValues/Language'),
  languageMap: requireTest('./Maps/languageMap'),
  mailto: requireTest('./RegexValues/Mailto'),
  number: requireTest('./Values/Number'),
  object: requireTest('./SchemaRules/Object'),
  result: requireTest('./SchemaRules/Result'),
  scaled: requireTest('./Values/Scaled'),
  score: requireTest('./SchemaRules/Score'),
  sha1: requireTest('./RegexValues/Sha1'),
  statement: requireTest('./SchemaRules/Statement'),
  statementRef: requireTest('./SchemaRules/StatementRef'),
  string: requireTest('./Values/String'),
  subStatement: requireTest('./SchemaRules/SubStatement'),
  subStatementObject: requireTest('./SchemaRules/SubStatementObject'),
  timestamp: requireTest('./RegexValues/Timestamp'),
  uuid: requireTest('./RegexValues/Uuid'),
  verb: requireTest('./SchemaRules/Verb'),
  version: requireTest('./RegexValues/Version'),
};
